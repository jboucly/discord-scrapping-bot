// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider      = "prisma-client-js"
    binaryTargets = ["native", "linux-musl"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Missions {
    id             Int      @id @default(autoincrement())
    createdAt      DateTime @db.Timestamptz(6)
    updatedAt      DateTime @db.Timestamptz(6)
    channelName    String
    channelId      String
    words          String[]
    forbiddenWords String[] @default([])
    userId         String

    treaty TreatyMission[]
}

model TreatyMission {
    id              Int      @id @default(autoincrement())
    createdAt       DateTime @db.Timestamptz(6)
    updatedAt       DateTime @db.Timestamptz(6)
    missionId       Int
    missionTreatyId String   @db.VarChar(255)
    url             String?
    name            String?

    mission Missions @relation(fields: [missionId], references: [id], onDelete: Cascade)
}

model Daily {
    id          Int      @id @default(autoincrement())
    createdAt   DateTime @db.Timestamptz(6)
    updatedAt   DateTime @db.Timestamptz(6)
    crontab     String   @db.VarChar(255)
    channelId   String   @db.VarChar(255)
    channelName String   @db.VarChar(255)
    message     String   @db.VarChar(255)
}

model AdTrackers {
    id                    Int                     @id @default(autoincrement())
    createdAt             DateTime                @default(now()) @db.Timestamptz(6)
    updatedAt             DateTime                @updatedAt @db.Timestamptz(6)
    url                   String                  @unique @db.VarChar(255)
    name                  String                  @db.VarChar(255)
    channelId             String                  @db.VarChar(255)
    userId                String                  @db.VarChar(255)
    type                  AdTrackerType
    AdTrackerLocalStorage AdTrackerLocalStorage[]
    TreatyAdTracker       TreatyAdTracker[]
}

model AdTrackerLocalStorage {
    id          Int      @id @default(autoincrement())
    createdAt   DateTime @default(now()) @db.Timestamptz(6)
    updatedAt   DateTime @updatedAt @db.Timestamptz(6)
    key         String   @db.VarChar(255)
    value       String   @db.Text
    adTrackerId Int

    AdTrackers AdTrackers @relation(fields: [adTrackerId], references: [id], onDelete: Cascade)
}

model TreatyAdTracker {
    id          Int      @id @default(autoincrement())
    createdAt   DateTime @default(now()) @db.Timestamptz(6)
    updatedAt   DateTime @updatedAt @db.Timestamptz(6)
    url         String?  @db.VarChar(255)
    title       String?  @db.VarChar(255)
    price       String?  @db.VarChar(50)
    pricePerM2  String?  @db.VarChar(50)
    imageUrl    String?  @db.VarChar(255)
    location    String?  @db.VarChar(255)
    adTrackerId Int

    AdTracker AdTrackers @relation(fields: [adTrackerId], references: [id], onDelete: Cascade)
}

enum AdTrackerType {
    LBC
    OUEST_FRANCE_IMMO
    IMMOBILIER_NOTAIRE
    MOTEUR_IMMO
}
